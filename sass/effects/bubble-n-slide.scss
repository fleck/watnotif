@import '../variables.scss';

$transition-duration : .15s;
$transition-delay    : .5s;

// #watnotif-wrapper  > .notif {
@mixin effect {

// BEGIN REGION "MATRIX TO POSITION ELSEWHERE THAN RIGHT TOP"
    // sadly, LESS is a bit limited so we can't truly dynamically set the transform matrix and have a crappy switch case
    $coeff-a : 1;
    $coeff-d : 1;
    @if $horizontal-position == left {
        $coeff-a : -1
    }
    @if $vertical-position == bottom {
        $coeff-d : -1;
    }
    &, & > .notif {
        transform: matrix($coeff-a, 0, 0, $coeff-d, 0, 0);
    }
// END REGION "MATRIX TO POSITION ELSEWHERE THAN RIGHT TOP"

// BEGIN REGION "SPECIAL PROPERTIES FOR HORIZONTAL CENTERING"
    @if $horizontal-position == center {
        .notif {
            top: 0 !important;
            margin-left: -25px !important;
            &.inactive {
                top: -100% !important;
                right: -50% !important; 
                margin-left: -25px !important;
            }
        }
    }
// END REGION "SPECIAL PROPERTIES FOR HORIZONTAL CENTERING"


    & > .notif {
        right: -50px; 
        
        margin: 0 0 20px -50px; 

        border-radius: 0;

        transition-property: top, margin, width, right, border-radius;
        transition-duration: $transition-duration;
        transition-delay:  0s, 0s,  $transition-delay, $transition-delay, $transition-delay;
        transition-timing-function: ease-out;

        &.inactive {
            right: -100%;

            width: 50px; 
            height: 50px;

            margin: 0 0 20px 0;
            
            border-radius: 25px;
            &.going-out {
                width: 100%;
                opacity: 0;
                border-radius: 0;
                transition-property: margin, opacity;
                transition-duration: $transition-duration;
                transition-delay: 0s;
                transition-timing-function: ease-out;
            }
        }
        /* Mobile view */
        @media (max-width: $mobile-max-width) {
            margin: 0;
            & > .close-notif {
                opacity: .4;
                transition-property: opacity;
                transition-duration: $transition-duration;
                transition-delay: $transition-delay;
            }
            &.inactive > .close-notif {
                opacity: 0;
            }
        }
    }
}
